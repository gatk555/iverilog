name: test

on:
  workflow_dispatch:

jobs:

  mac:
    strategy:
      fail-fast: false
    runs-on: macos-latest
    name: 'macOS'
    steps:

    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        brew install bison
        pip3 install docopt

    - name: Build, check and install
      run: |
        export PATH="/usr/local/opt/bison/bin:$PATH"
        autoconf
        ./configure --enable-libvvp
        make -j$(nproc)
        sudo make install
        make check
    - name: Test
      run: ./.github/test.sh

    - name: Test
      run: |
        mkdir local
        mkdir local/bin
        cp /usr/local/bin/iverilog local/bin
        cp /usr/local/bin/iverilog-vpi local/bin
        cp /usr/local/bin/vvp local/bin
        mkdir local/include
        cp -r /usr/local/include/iverilog local/include/iverilog
        mkdir local/lib
        cp /usr/local/lib/libveriuser.a local/lib
        cp /usr/local/lib/libvpi.a local/lib
        cp /usr/local/lib/libvvp.so local/lib
        cp -r /usr/local/lib/ivl local/lib/ivl
        mkdir -p local/share/man/man1
        cp /usr/local/share/man/man1/iverilog.1 local/share/man/man1
        cp /usr/local/share/man/man1/iverilog-vpi.1 local/share/man/man1
        cp /usr/local/share/man/man1/vvp.1 local/share/man/man1
    - uses: actions/upload-artifact@v4
      with:
        name: Icarus Verilog with libvvp, Mac OS
        path: local

  win:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW64, arch: x86_64 }
        ]
    name: ${{ matrix.msystem}} Â· ${{ matrix.arch }}
    defaults:
      run:
        shell: msys2 {0}
    env:
      MINGW_ARCH: ${{ matrix.msystem }}
    steps:

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v4

    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true
        install: >
          git
          base-devel
          gperf
          python-pip
          mingw-w64-${{ matrix.arch }}-toolchain

    - uses: actions/setup-python@v5
      with:
        python-version: '>=3.5'

    - name: Build and check
      run: |
        cd msys2
        makepkg-mingw --noconfirm --noprogressbar -sCLf

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.msystem }}-${{ matrix.arch }}
        path: msys2/*.zst

    - name: Install
      run: pacman -U --noconfirm msys2/*.zst

    - name: Copy in CMD
      shell: cmd
      run: |
        copy D:\a\_temp\msys64\mingw64\lib\libvvp.dll D:\a\_temp\msys64\mingw64\bin
    - name: Test
      run: |
        ./.github/test.sh
